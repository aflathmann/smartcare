/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ApiResponse
import io.swagger.client.model.Event
import io.swagger.client.model.Events
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object EventApi {

  /**
   * Create a new event
   * 
   * Expected answers:
   *   code 200 : ApiResponse (response)
   * 
   * @param event 
   */
  def createEvent(event: Event): ApiRequest[ApiResponse] =
    ApiRequest[ApiResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/events", "application/json")
      .withBody(event)
      .withSuccessResponse[ApiResponse](200)
        /**
   * Get all events
   * 
   * Expected answers:
   *   code 200 : Events (response)
   * 
   * @param skip Amount of events to skip
   * @param limit Maximum amount of events to get
   */
  def getEvents(skip: Option[Int] = None, limit: Option[Int] = None): ApiRequest[Events] =
    ApiRequest[Events](ApiMethods.GET, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/events", "application/json")
      .withQueryParam("skip", skip)
      .withQueryParam("limit", limit)
      .withSuccessResponse[Events](200)
      

}

