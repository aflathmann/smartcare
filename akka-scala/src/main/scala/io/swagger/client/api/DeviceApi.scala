/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ApiResponse
import io.swagger.client.model.Device
import io.swagger.client.model.DeviceData
import io.swagger.client.model.Event
import java.util.UUID
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DeviceApi {

  /**
   * Register a new device
   * 
   * Expected answers:
   *   code 400 :  (Invalid data)
   *   code 200 : ApiResponse (response)
   * 
   * @param device 
   */
  def createDevice(device: Device): ApiRequest[ApiResponse] =
    ApiRequest[ApiResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/devices", "application/json")
      .withBody(device)
      .withErrorResponse[Unit](400)
      .withSuccessResponse[ApiResponse](200)
        /**
   * Append new data for a device
   * 
   * Expected answers:
   *   code 400 :  (Invalid data)
   *   code 200 : ApiResponse (response)
   * 
   * @param deviceId 
   * @param deviceData 
   */
  def createDeviceData(deviceId: UUID, deviceData: DeviceData): ApiRequest[ApiResponse] =
    ApiRequest[ApiResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/devices/{device_id}/data", "application/json")
      .withBody(deviceData)
      .withPathParam("device_id", deviceId)
      .withErrorResponse[Unit](400)
      .withSuccessResponse[ApiResponse](200)
        /**
   * Append new data for a device
   * 
   * Expected answers:
   *   code 400 :  (Invalid data)
   *   code 200 : ApiResponse (response)
   * 
   * @param deviceId 
   * @param device 
   */
  def createDeviceEvent(deviceId: UUID, device: Event): ApiRequest[ApiResponse] =
    ApiRequest[ApiResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/devices/{device_id}/events", "application/json")
      .withBody(device)
      .withPathParam("device_id", deviceId)
      .withErrorResponse[Unit](400)
      .withSuccessResponse[ApiResponse](200)
        /**
   * Get Data for a device
   * 
   * Expected answers:
   *   code 400 :  (Invalid data)
   *   code 200 :  (response)
   * 
   * @param deviceId 
   */
  def getDeviceData(deviceId: UUID): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/devices/{device_id}/data", "application/json")
      .withPathParam("device_id", deviceId)
      .withErrorResponse[Unit](400)
      .withSuccessResponse[Unit](200)
        /**
   * Get Events for a device
   * 
   * Expected answers:
   *   code 400 :  (Invalid data)
   *   code 200 :  (response)
   * 
   * @param deviceId 
   */
  def getDeviceEvents(deviceId: UUID): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/devices/{device_id}/events", "application/json")
      .withPathParam("device_id", deviceId)
      .withErrorResponse[Unit](400)
      .withSuccessResponse[Unit](200)
      

}

