/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ActivationInfo
import io.swagger.client.model.ConfirmPasswordRequestInfo
import io.swagger.client.model.PasswordRequestInfo
import io.swagger.client.model.Registration
import java.util.UUID
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object UserApi {

  /**
   * Activate an inactive user
   * 
   * Expected answers:
   *   code 200 :  (Registration successful)
   *   code 400 :  (Invalid registration data)
   * 
   * @param userId 
   * @param activation 
   */
  def activateUser(userId: UUID, activation: ActivationInfo): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/users/{user_id}/activate", "application/json")
      .withBody(activation)
      .withPathParam("user_id", userId)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
        /**
   * Request a new password
   * 
   * Expected answers:
   *   code 200 :  (Password request confirmation successful)
   *   code 400 :  (user id or confirmation code not found)
   * 
   * @param userId 
   * @param register 
   */
  def confirmNewPasswordRequest(userId: UUID, register: ConfirmPasswordRequestInfo): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/users/{user_id}/confirmNewPasswordRequest", "application/json")
      .withBody(register)
      .withPathParam("user_id", userId)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
        /**
   * Register a new user
   * 
   * Expected answers:
   *   code 200 :  (Registration successful)
   *   code 400 :  (Invalid registration data)
   * 
   * @param register 
   */
  def registerUser(register: Registration): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/users/register", "application/json")
      .withBody(register)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
        /**
   * Request a new password
   * 
   * Expected answers:
   *   code 200 :  (Password request successful)
   *   code 400 :  (Email not found)
   * 
   * @param userId 
   * @param register 
   */
  def requestNewPassword(userId: UUID, register: PasswordRequestInfo): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/XQDEV/smartcare/1.0.0", "/users/{user_id}/requestNewPassword", "application/json")
      .withBody(register)
      .withPathParam("user_id", userId)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
      

}

